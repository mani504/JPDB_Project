import cv2
import numpy as np
import json

# Load the image
image_path = "screenshot001.jpg"
image = cv2.imread(image_path)

# Load the JSON file containing rectangle coordinates
json_file = "rectangles.json"
with open(json_file) as f:
    data = json.load(f)

# Create an empty mask of the same size as the image
mask = np.zeros(image.shape[:2], dtype=np.uint8)

# Define a margin (in pixels) to expand the rectangles for border and shadow
margin = 5

# Iterate through each rectangle in the JSON data and add it to the mask
for shape in data['shapes']:
    if shape['shape_type'] == 'rectangle':
        # Extract the top-left and bottom-right points of the rectangle
        top_left = tuple(map(int, shape['points'][0]))  # (x1, y1)
        bottom_right = tuple(map(int, shape['points'][1]))  # (x2, y2)
        
        # Expand the rectangle by the margin
        expanded_top_left = (max(0, top_left[0] - margin), max(0, top_left[1] - margin))
        expanded_bottom_right = (
            min(image.shape[1], bottom_right[0] + margin),  # Ensure not exceeding image width
            min(image.shape[0], bottom_right[1] + margin)   # Ensure not exceeding image height
        )
        
        # Draw a filled rectangle on the mask with the expanded coordinates
        cv2.rectangle(mask, expanded_top_left, expanded_bottom_right, 255, thickness=-1)

# Perform inpainting using OpenCV
inpainted_image = cv2.inpaint(image, mask, inpaintRadius=3, flags=cv2.INPAINT_TELEA)

# Save or display the result
cv2.imwrite("inpainted_image_with_borders.jpg", inpainted_image)
cv2.imshow("Inpainted Image", inpainted_image)
cv2.waitKey(0)
cv2.destroyAllWindows()
